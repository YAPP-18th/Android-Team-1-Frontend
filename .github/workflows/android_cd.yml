# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
name: Android CD _ develop

on:
  push:
    branches: develop
    
  pull_request:
    branches: develop
    
jobs:
  build:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
       java-version: 1.8
       
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Decrypt Services
      run: gpg --quiet --batch --yes --always-trust --decrypt --passphrase="$FIREBASE_SECRET" --output app/services.tar app/services.tar.gpg
      env:
        FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET }}

    - name: Unzip Services
      run: tar xvf app/services.tar -C app

    - name: Build APK
      run: bash ./gradlew assembleRelease --stacktrace
     
    - name: CI 2-8. signing_config.tar 압축 풀기
      run: tar xvf app/signing_config.tar
      
    - run: './gradlew assembleRelease'
    - uses: MeilCli/slack-upload-file@v1
      with:
        slack_token: ${{ secrets.SLACK_READ_WRITE_TOKEN }}
        channels: ${{ secrets.SLACK_CHANNEL_DEPLOY }}
        file_path: 'app/build/outputs/apk/release/app-release.apk'
        file_name: 'app-release.apk'
        file_type: 'apk'
        initial_comment: '${{ github.ref }} 테스트 앱 슬랙 배포 성공'

       
    - name: 테스트용 apk artifact 업로드
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: app/build/outputs/apk/release/app-release.apk
        
 
